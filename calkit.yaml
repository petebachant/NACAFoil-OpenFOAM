name: nacafoil-openfoam
title: Simulating a NACA airfoil with OpenFOAM
description:
dependencies:
  - docker
  - uv
datasets:
  - path: processed/NACA0012_6e6_Ladson_80grit.csv
    imported_from:
      url: http://turbmodels.larc.nasa.gov/naca0012_val.html
  - path: processed/NACA0012_6e6_Ladson_120grit.csv
    imported_from:
      url: http://turbmodels.larc.nasa.gov/naca0012_val.html
  - path: processed/NACA0012_6e6_Ladson_180grit.csv
    imported_from:
      url: http://turbmodels.larc.nasa.gov/naca0012_val.html
  - path: processed/all-simulated.csv
    title: All simulation results
    stage: aggregate-results
environments:
  foam:
    kind: docker
    image: openfoam-2406-foampy
    wdir: /work
    path: Dockerfile
    default: true
    layers:
      - miniforge
      - foampy
  py:
    path: requirements.txt
    kind: uv-venv
    prefix: .venv
    python: "3.12"
parameters:
  foil_name: "0012"
  reynolds_number: 2e5
  angle_of_attack:
    kind: list[int]
    values:
      - range:
          start: 0
          stop: 20
          step: 1
pipeline:
  stages:
    naca0012-re2e5:
      kind: python-script
      script_path: run.py
      environment: foam
      args:
        - "0012"
        - "{angle_of_attack}"
      iterate_over:
        - arg_name: angle_of_attack
          values:
            - parameter: angle_of_attack
      inputs:
        - system/controlDict
        - system/fvSchemes
        - system/fvSolution
        - system/createPatchDict
        - system/surfaces
        - constant/transportProperties
        - constant/turbulenceProperties
        - scripts/blockmeshdict.py
        - 0.org
      outputs:
        - cases/naca0012-re2e5-aoa-{angle_of_attack}
    aggregate-results:
      kind: python-script
      script_path: scripts/aggregate.py
      environment: py
      inputs:
        - cases
      outputs:
        - path: processed/all-simulated.csv
          storage: git
    plot-clcd:
      kind: python-script
      script_path: scripts/plot-clcd.py
      environment: py
      inputs:
        - from_stage_outputs: aggregate-results
      outputs:
        - path: figures/naca0012-clcd.json
          storage: git
    plot-flow:
      kind: python-script
      script_path: scripts/plot-flow.py
      environment: py
      args:
        - "{angle_of_attack}"
      iterate_over:
        - arg_name: angle_of_attack
          values:
            - parameter: angle_of_attack
      inputs:
        - cases/naca0012-re2e5-aoa-{angle_of_attack}/postProcessing/surfaces
      outputs:
        - figures/naca0012-re2e5-aoa-{angle_of_attack}-umag.png
        - figures/naca0012-re2e5-aoa-{angle_of_attack}-umag.html
figures:
  - path: figures/naca0012-clcd.json
    title: NACA 0012 lift-to-drag ratio
    description: >
      Plotted against the Ladson 180 grit experimental data.
    stage: plot-clcd
  - path: figures/naca0012-re2e5-aoa-0-umag.png
    title: Velocity magnitude at 0 degrees angle of attack
    stage: plot-flow@0
  - path: figures/naca0012-re2e5-aoa-0-umag.html
    title: Velocity magnitude at 0 degrees angle of attack (interactive)
    stage: plot-flow@0
  - path: figures/naca0012-re2e5-aoa-{angle_of_attack}-umag.png
    title: Velocity at {angle_of_attack} degrees angle of attack
    stage: plot-flow
    iterate_over: # Unnecessary since the stage iterates?
      - arg_name: angle_of_attack
        values:
          - parameter: angle_of_attack
app:
  path: app
  url: https://petebachant-nacafoil-openfoam.hf.space
  title: NACA 0012
  kind: hf
questions:
  - How well does a 2-D steady RANS simulation predict airfoil loading?
showcase:
  - markdown: >
      The figure below shows NACA 0012 lift-to-drag ratio plotted against
      the experimental data from Ladson.
      Note that the experimental data was collected at a much higher
      Reynolds number, which explains some of the discrepancy.
  - figure: figures/naca0012-clcd.json
